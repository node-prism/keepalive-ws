var h=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var L=Object.prototype.hasOwnProperty;var f=(s,t)=>{for(var e in t)h(s,e,{get:t[e],enumerable:!0})},w=(s,t,e,i)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of b(t))!L.call(s,n)&&n!==e&&h(s,n,{get:()=>t[n],enumerable:!(i=y(t,n))||i.enumerable});return s};var x=s=>w(h({},"__esModule",{value:!0}),s);var k={};f(k,{Connection:()=>a,KeepAliveClient:()=>l});module.exports=x(k);var r=class{constructor(t=2**16-1){this.ids=[];this.index=0;this.maxIndex=t}release(t){if(t<0||t>this.maxIndex)throw new TypeError(`ID must be between 0 and ${this.maxIndex}. Got ${t}.`);this.ids[t]=!1}reserve(){let t=this.index;for(;;){let e=this.index;if(!this.ids[e])return this.ids[e]=!0,e;if(this.index>=this.maxIndex?this.index=0:this.index++,this.index===t)throw new Error("All IDs are reserved. Make sure to release IDs when they are no longer used.")}}};var p=class{constructor(t,e){this.value=t,this.expireTime=Date.now()+e}get expiresIn(){return this.expireTime-Date.now()}get isExpired(){return Date.now()>this.expireTime}},d=class{constructor(){this.items=[]}add(t,e){this.items.push(new p(t,e))}get isEmpty(){let t=this.items.length;for(;t--;)if(this.items[t].isExpired)this.items.splice(t,1);else return!1;return!0}pop(){for(;this.items.length;){let t=this.items.shift();if(!t.isExpired)return t}return null}};var a=class extends EventTarget{constructor(e){super();this.ids=new r;this.queue=new d;this.callbacks={};this.socket=e,this.applyListeners()}on(e,i,n){this.addEventListener(e,i,n)}off(e,i,n){this.removeEventListener(e,i,n)}sendToken(e,i){try{this.socket.send(JSON.stringify(e))}catch{this.queue.add(e,i)}}applyListeners(e=!1){let i=()=>{for(;!this.queue.isEmpty;){let n=this.queue.pop();this.sendToken(n.value,n.expiresIn)}};e&&i(),this.socket.onopen=(n,o)=>{i(),this.dispatchEvent(new Event("connection")),this.dispatchEvent(new Event("connected")),this.dispatchEvent(new Event("connect"))},this.socket.onclose=n=>{this.dispatchEvent(new Event("close")),this.dispatchEvent(new Event("closed")),this.dispatchEvent(new Event("disconnected")),this.dispatchEvent(new Event("disconnect"))},this.socket.onmessage=async n=>{try{let o=JSON.parse(n.data);this.dispatchEvent(new CustomEvent("message",{detail:o})),o.command==="latency:request"?(this.dispatchEvent(new CustomEvent("latency:request",{detail:{latency:o.payload.latency??void 0}})),this.command("latency:response",{latency:o.payload.latency??void 0},null)):o.command==="latency"?this.dispatchEvent(new CustomEvent("latency",{detail:{latency:o.payload??void 0}})):o.command==="ping"?(this.dispatchEvent(new CustomEvent("ping",{})),this.command("pong",{},null)):this.dispatchEvent(new CustomEvent(o.command,{detail:o.payload})),this.callbacks[o.id]&&this.callbacks[o.id](null,o.payload)}catch{this.dispatchEvent(new Event("error"))}}}async command(e,i,n=3e4,o=null){let c=this.ids.reserve(),E={id:c,command:e,payload:i??{}};if(this.sendToken(E,n),n===null){this.ids.release(c),delete this.callbacks[c];return}let m=this.createResponsePromise(c),u=this.createTimeoutPromise(c,n);if(typeof o=="function"){let v=await Promise.race([m,u]);return o(v),v}else return Promise.race([m,u])}createTimeoutPromise(e,i){return new Promise((n,o)=>{setTimeout(()=>{this.ids.release(e),delete this.callbacks[e],o(new Error(`Command ${e} timed out after ${i}ms.`))},i)})}createResponsePromise(e){return new Promise((i,n)=>{this.callbacks[e]=(o,c)=>{this.ids.release(e),delete this.callbacks[e],o?n(o):i(c)}})}};var g=(s={})=>(s.pingTimeout=s.pingTimeout??3e4,s.maxLatency=s.maxLatency??2e3,s.shouldReconnect=s.shouldReconnect??!0,s.reconnectInterval=s.reconnectInterval??2e3,s.maxReconnectAttempts=s.maxReconnectAttempts??1/0,s),l=class extends EventTarget{constructor(e,i={}){super();this.isReconnecting=!1;this.url=e,this.socket=new WebSocket(e),this.connection=new a(this.socket),this.options=g(i),this.applyListeners()}get on(){return this.connection.addEventListener.bind(this.connection)}applyListeners(){this.connection.addEventListener("connection",()=>{this.heartbeat()}),this.connection.addEventListener("close",()=>{this.reconnect()}),this.connection.addEventListener("ping",()=>{this.heartbeat()}),this.connection.addEventListener("message",e=>{this.dispatchEvent(new CustomEvent("message",e))})}heartbeat(){clearTimeout(this.pingTimeout),this.pingTimeout=setTimeout(()=>{this.options.shouldReconnect&&this.reconnect()},this.options.pingTimeout+this.options.maxLatency)}async reconnect(){if(this.isReconnecting)return;this.isReconnecting=!0;let e=1;if(this.socket)try{this.socket.close()}catch{}let i=()=>{this.socket=new WebSocket(this.url),this.socket.onerror=()=>{e++,e<=this.options.maxReconnectAttempts?setTimeout(i,this.options.reconnectInterval):(this.isReconnecting=!1,this.connection.dispatchEvent(new Event("reconnectfailed")),this.connection.dispatchEvent(new Event("reconnectionfailed")))},this.socket.onopen=()=>{this.isReconnecting=!1,this.connection.socket=this.socket,this.connection.applyListeners(!0),this.connection.dispatchEvent(new Event("connection")),this.connection.dispatchEvent(new Event("connected")),this.connection.dispatchEvent(new Event("connect")),this.connection.dispatchEvent(new Event("reconnection")),this.connection.dispatchEvent(new Event("reconnected")),this.connection.dispatchEvent(new Event("reconnect"))}};i()}async command(e,i,n,o){return this.connection.command(e,i,n,o)}};0&&(module.exports={Connection,KeepAliveClient});
